# Python imports
from typing import List

# Project imports
from src.utils import EncryptedUpdate
from src.zhao_nishide.server import ZNServer


class Server(object):
    """Libertas server implementation."""

    def __init__(
            self,
            sigma: ZNServer,
    ) -> None:
        """Initializes a Libertas server, setting the underlying server scheme that is used.

        :param sigma: The underlying SSE scheme used by this Libertas instance
        :type sigma: ZNServer
        :returns: None
        :rtype: None
        """
        self.sigma: ZNServer = sigma
        self.index = None

    def build_index(
            self,
            security_parameter: int,
    ) -> None:
        """Sets up the Libertas server, initializing its index.

        :param security_parameter: The required security strength
        :type security_parameter: int
        :returns: None
        :rtype: None
        """
        self.sigma.build_index()

    def search(
            self,
            srch_token,
    ) -> List[EncryptedUpdate]:
        """Searches the index using a search token.

        :param srch_token: The search token generated by the client
        :type srch_token: TODO
        :returns: A list of encrypted updates
        :rtype: List[EncryptedUpdate]
        """
        return self.sigma.search(srch_token)

    def add(
            self,
            add_token,
    ) -> None:
        """Adds an (add) update to the index (see utils.Update)

        :param add_token: The add token generated from the update by the client
        :type add_token: TODO
        :returns: None
        :rtype: None
        """
        self.sigma.add(add_token)

    def delete(
            self,
            del_token,
    ) -> None:
        """Adds an (delete) update to the index (see utils.Update)

        :param del_token: The delete token generated from the update by the client
        :type del_token: TODO
        :returns: None
        :rtype: None
        """
        self.sigma.add(del_token)
